const fetch = require('node-fetch');
const { showLog } = require('./helpers');
const service = {};
const bUrl = 'https://wali.igbcolombia.com/api/manager/res/'//'http://wali.igbcolombia.com:8080/manager/res/'
const urlBase = `${bUrl}calidosos/`;
const baseOptions = { method: 'get', rejectUnauthorized: false, headers: {'Content-Type': 'application/json', 'X-TOKEN': 'UzEkdGVtYSRJZ2IyMDE1Kg=='} };

service.cities = async () => {
    const url = bUrl+'pedbox/list-municipios/IGB';
    return await makeRequest(url);
}

service.dataLogin = async() => {
    const url = urlBase+'data-login';
    return await makeRequest(url, baseOptions);
}

service.locations = async () => {
    const url = urlBase+'sucursales';
    return await makeRequest(url, baseOptions);
}

service.points = async(cardCode) => {
    const url = urlBase+`disponible-puntos?cardCode=${cardCode}`;
    return await makeRequest(url, baseOptions);
}

service.pointsHistory = async(cardCode) => {
    const url = urlBase+`historial-puntos?cardCode=${cardCode}`;
    return await makeRequest(url, baseOptions);
}

service.pointsRedeem = async(input) => {
    const url = urlBase+'add-puntos-redimidos';
    const options = { 
        method: 'post', 
        ejectUnauthorized: false,
        body: JSON.stringify(input),
        headers: {'Content-Type': 'application/json', 'X-TOKEN': 'UzEkdGVtYSRJZ2IyMDE1Kg=='},
    }
    console.log(JSON.stringify(input));
    return await makeRequest(url, options);
}

service.pointsDelete = async(input) => {
    const url = `${urlBase}delete-punto-redimido/${input.cardCode}/${input.comprobante}`;
    return await makeRequest(url, { method: 'delete', headers: {'Content-Type': 'application/json', 'X-TOKEN': 'UzEkdGVtYSRJZ2IyMDE1Kg=='} });
}

service.products = async () => {
    const url = urlBase+'productos';
    return await makeRequest(url, baseOptions);
}

service.programs = async () => {
    const url = urlBase+'programas';
    return await makeRequest(url, baseOptions);
}

service.sellers = async (cardCode)  => {
    const url = urlBase+`cliente/vendedores-mostrador?cardCode=${cardCode}`;
    return await makeRequest(url, baseOptions);
}

service.sendSeller = async (input) => {
    const url = urlBase+'add-vendedor-mostrador';
    const options = { 
        method: 'post', 
        ejectUnauthorized: false,
        body: JSON.stringify(input),
        headers: {'Content-Type': 'application/json', 'X-TOKEN': 'UzEkdGVtYSRJZ2IyMDE1Kg=='},
    }
    return await makeRequest(url, options);
}

service.states = async () => {
    const url = bUrl+'pedbox/list-departamentos/IGB';
    return await makeRequest(url, { method: 'get', rejectUnauthorized: false, headers: {'Content-Type': 'application/json'} });
}

service.totalRegistered = async () => {
    const url = urlBase+'total-registros';
    return await makeRequest(url, baseOptions);
}

const makeRequest = async (url, options) => {
    try {
        var resp = await fetch(url, options || {});

        if (!resp.ok) return {'err': 'Error obteniendo los datos'};
        
        const json = await resp.json();
        return {'data': json};
    } catch(error) {
        showLog('REQUEST URL: '+url, error);
        return {'err': 'Error obteniendo los datos', 'err_service': error};
    }
}

module.exports = service